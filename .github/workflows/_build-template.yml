on:
  workflow_call: 
    inputs:
        build-only:
            required: false
            default: false
            type: boolean
        image-id:
            required: false
            type: string
            default: "master-latest"
        namespace:
            required: true
            default: master
            type: string
        cronology-check:
            required: false
            default: false
            type: boolean

name: _build
env:
  CACHE_BUSTER: 17
  DOCKER_CACHE_BUSTER: 12
  DOCKER_BUILDKIT: 1
  NAMESPACE: ${{ inputs.namespace }}
  FALLBACK_NAMESPACE: master

  IMAGE_ID: ${{ inputs.image-id }}
  BUILD_ONLY: ${{ inputs.build-only }}

  TEST_USE_FULL_DIST: true

  BUILD_ONLY_PR: ${{ inputs.build-only }}

## dockerize by inputs

## build api
jobs:
  build_frontend:
    runs-on: ubuntu-latest

    # adding build
    steps:
      - name: "Checkout Github Action"
        uses: actions/checkout@v4

      - name: "Install Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: 22.14.0

      - uses: "pnpm/action-setup@v3"
        name: Install pnpm
        id: pnpm-install
        with: 
          version: 10
          run_install: false

      # needed for perf 
      - name: Get pnpm store directory
        id: pnpm-store
        run: |
          echo "::set-output name=pnpm_store::$(pnpm store path)"

      - name: "install packages"
        run: |
          pnpm install
        env: 
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "build frontend"
        run: |
          pnpm build

      - name: Push
        run: |
          echo "IMAGE_ID: ${{ env.IMAGE_ID }}"

  cronology_check:
    runs-on: ubuntu-latest
    needs: build_frontend
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup git
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"

      - name: Merge master branch
        run: |
          git checkout ${{ github.head_ref }}
          git pull origin master
          git merge origin/master || true

      - name: Auto-resolve cronology.md conflict
        run: |
          if git ls-files -u | grep -q 'cronology.md'; then
            git show :1:cronology.md > cronology.md.ours
            git show :2:cronology.md > cronology.md.theirs

            cat cronology.md.ours cronology.md.theirs | sort | uniq > cronology.md

            git add cronology.md
            git commit -m "Auto merge cronology.md"
          fi

      - name: Push changes if any
        run: |
          git push origin HEAD:${{ github.head_ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}