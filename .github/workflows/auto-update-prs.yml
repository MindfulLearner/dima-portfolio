name: PR Build

on:
  pull_request_target:
    types:
      - synchronize
      - ready_for_review
      - converted_to_draft

jobs:
  update-pr:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Setup Git identity
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit changes
        run: |
          git merge origin/master --no-edit || true
          git commit -m "changes" || true

    # test
      - name: Push result to PR branch
        run: |
          git push || true

      - name: Try to merge master and resolve cronology.md conflict
        run: |
          git fetch origin master
          git merge origin/master --no-edit || true
      
          if git status | grep 'both modified:.*cronology.md'; then
            echo "Conflict in cronology.md detected â€” trying to resolve automatically..."
            # salva il contenuto della versione corrente e di master
            git show :1:cronology.md > base.txt || true
            git show :2:cronology.md > ours.txt || true
            git show :3:cronology.md > theirs.txt || true
      
            # unisci le tre versioni rimuovendo duplicati
            cat ours.txt theirs.txt | sort | uniq > merged.txt
            mv merged.txt cronology.md
            git add cronology.md
          fi
      
          git commit -am "Merge master and resolve cronology.md automatically" || true

  build:
    if: ${{ github.event.pull_request.draft == false }}
    name: Build
    needs: update-pr
    uses: ./.github/workflows/_build-template.yml
    with:
      build-only: true
      namespace: "pr"
      image-id: "pr-${{ github.event.pull_request.number }}"
    secrets: inherit